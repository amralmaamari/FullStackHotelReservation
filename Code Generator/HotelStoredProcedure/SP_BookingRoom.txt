
                GO
              CREATE PROCEDURE SP_AddNewBookingRoom
(
    @BookingRoomID int OUTPUT,
    @BookingID int,
    @RoomID int,
    @PaidFees decimal
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        INSERT INTO BookingRoom (
            BookingID,
            RoomID,
            PaidFees
        ) VALUES (
            @BookingID,
            @RoomID,
            @PaidFees
        );
        SELECT @BookingRoomID = SCOPE_IDENTITY();
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
        SET @BookingRoomID = NULL;
    END CATCH;
END;


                GO
              CREATE PROCEDURE SP_DeleteBookingRoom
(
    @BookingRoomID int
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        DELETE FROM BookingRoom WHERE BookingRoomID = @BookingRoomID;
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH;
END;
 

                GO
              CREATE PROCEDURE SP_GetBookingRoomInfoByID
(
    @BookingRoomID int
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        select * FROM BookingRoom WHERE BookingRoomID = @BookingRoomID;
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH;
END;


                GO
              
        CREATE PROCEDURE SP_IsBookingRoomExistsByBookingRoomID
        (
            @BookingRoomID int
        )
        AS
        BEGIN
            SET NOCOUNT ON;
            BEGIN TRY
                IF EXISTS (SELECT 1 FROM BookingRoom WHERE BookingRoomID = @BookingRoomID)
                BEGIN 
                    RETURN 1;
                END
                ELSE
                BEGIN
                    RETURN 0;
                END
            END TRY
            BEGIN CATCH
                DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
                SELECT 
                    @ErrorMessage = ERROR_MESSAGE(),
                    @ErrorSeverity = ERROR_SEVERITY(),
                    @ErrorState = ERROR_STATE();
                RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
            END CATCH;
        END;

                GO
              CREATE PROCEDURE SP_UpdateBookingRoomByID
    @BookingRoomID int,
    @BookingID int,
    @RoomID int,
    @PaidFees decimal  AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
    UPDATE BookingRoom
    SET
        BookingID = @BookingID,
        RoomID = @RoomID,
        PaidFees = @PaidFees    WHERE BookingRoomID = @BookingRoomID;
    END TRY
    BEGIN CATCH
        SELECT
            ERROR_NUMBER() AS ErrorNumber,
            ERROR_STATE() AS ErrorState,
            ERROR_SEVERITY() AS ErrorSeverity,
            ERROR_PROCEDURE() AS ErrorProcedure,
            ERROR_LINE() AS ErrorLine,
            ERROR_MESSAGE() AS ErrorMessage;
    END CATCH;
END;

                        
     }
 
 