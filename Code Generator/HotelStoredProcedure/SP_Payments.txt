
                GO
              CREATE PROCEDURE SP_AddNewPayments
(
    @PaymentID int OUTPUT,
    @BookingID int,
    @PaymentTypeID int,
    @PaymentStatusID int,
    @Amount decimal,
    @CurrencyCode nvarchar(100),
    @TimeAndDate datetime2
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        INSERT INTO Payments (
            BookingID,
            PaymentTypeID,
            PaymentStatusID,
            Amount,
            CurrencyCode,
            TimeAndDate
        ) VALUES (
            @BookingID,
            @PaymentTypeID,
            @PaymentStatusID,
            @Amount,
            @CurrencyCode,
            @TimeAndDate
        );
        SELECT @PaymentID = SCOPE_IDENTITY();
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
        SET @PaymentID = NULL;
    END CATCH;
END;


                GO
              CREATE PROCEDURE SP_DeletePayments
(
    @PaymentID int
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        DELETE FROM Payments WHERE PaymentID = @PaymentID;
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH;
END;
 

                GO
              CREATE PROCEDURE SP_GetPaymentsInfoByID
(
    @PaymentID int
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        select * FROM Payments WHERE PaymentID = @PaymentID;
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH;
END;


                GO
              
        CREATE PROCEDURE SP_IsPaymentsExistsByPaymentID
        (
            @PaymentID int
        )
        AS
        BEGIN
            SET NOCOUNT ON;
            BEGIN TRY
                IF EXISTS (SELECT 1 FROM Payments WHERE PaymentID = @PaymentID)
                BEGIN 
                    RETURN 1;
                END
                ELSE
                BEGIN
                    RETURN 0;
                END
            END TRY
            BEGIN CATCH
                DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
                SELECT 
                    @ErrorMessage = ERROR_MESSAGE(),
                    @ErrorSeverity = ERROR_SEVERITY(),
                    @ErrorState = ERROR_STATE();
                RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
            END CATCH;
        END;

                GO
              CREATE PROCEDURE SP_UpdatePaymentsByID
    @PaymentID int,
    @BookingID int,
    @PaymentTypeID int,
    @PaymentStatusID int,
    @Amount decimal,
    @CurrencyCode nvarchar (100),
    @TimeAndDate datetime2  AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
    UPDATE Payments
    SET
        BookingID = @BookingID,
        PaymentTypeID = @PaymentTypeID,
        PaymentStatusID = @PaymentStatusID,
        Amount = @Amount,
        CurrencyCode = @CurrencyCode,
        TimeAndDate = @TimeAndDate    WHERE PaymentID = @PaymentID;
    END TRY
    BEGIN CATCH
        SELECT
            ERROR_NUMBER() AS ErrorNumber,
            ERROR_STATE() AS ErrorState,
            ERROR_SEVERITY() AS ErrorSeverity,
            ERROR_PROCEDURE() AS ErrorProcedure,
            ERROR_LINE() AS ErrorLine,
            ERROR_MESSAGE() AS ErrorMessage;
    END CATCH;
END;

                        
     }
 
 